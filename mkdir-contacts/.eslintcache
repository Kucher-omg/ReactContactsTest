[{"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\index.js":"1","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\redux\\redux-store.js":"2","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\App.js":"3","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\reportWebVitals.js":"4","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\ContactsContainer.jsx":"5","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Favourite\\FavouriteContainer.jsx":"6","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\Contacts.jsx":"7","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Favourite\\Favourite.jsx":"8","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\redux\\contacts-reducer.js":"9","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Header\\Header.jsx":"10","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\Contact.jsx":"11","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\CreateContact.jsx":"12","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Edit\\EditContainer.jsx":"13","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Edit\\Edit.jsx":"14"},{"size":663,"mtime":1607340413346,"results":"15","hashOfConfig":"16"},{"size":315,"mtime":1607341393195,"results":"17","hashOfConfig":"16"},{"size":729,"mtime":1607418345572,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"16"},{"size":491,"mtime":1607374575425,"results":"20","hashOfConfig":"16"},{"size":327,"mtime":1607372876525,"results":"21","hashOfConfig":"16"},{"size":686,"mtime":1607374595370,"results":"22","hashOfConfig":"16"},{"size":823,"mtime":1607373682826,"results":"23","hashOfConfig":"16"},{"size":2034,"mtime":1607416700307,"results":"24","hashOfConfig":"16"},{"size":672,"mtime":1607342151810,"results":"25","hashOfConfig":"16"},{"size":1528,"mtime":1607374766612,"results":"26","hashOfConfig":"16"},{"size":1919,"mtime":1607374363087,"results":"27","hashOfConfig":"16"},{"size":330,"mtime":1607416586074,"results":"28","hashOfConfig":"16"},{"size":2082,"mtime":1607418809987,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"r135yn",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"32"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\index.js",[],["62","63"],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\redux\\redux-store.js",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\App.js",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\reportWebVitals.js",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\ContactsContainer.jsx",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Favourite\\FavouriteContainer.jsx",["64"],"import { connect } from 'react-redux';\r\nimport { isFavouriteAC } from '../../redux/contacts-reducer';\r\nimport Favourite from './Favourite';\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n                cards: state.contacts.cards\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n        \r\n})(Favourite);","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\Contacts.jsx",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Favourite\\Favourite.jsx",["65","66"],"import style from './Favourite.module.css';\r\n\r\n\r\nconst Favourite = (props) => {\r\n\r\n    let favContacts = props.cards.map(contact => {\r\n        if (contact.isFavourite === true) {\r\n            let { name, phone, email, id, isFavourite } = contact;\r\n            return (\r\n                <div key={id} className={style.contact}>\r\n                    <div className={style.name}>\r\n                        {name} \r\n                    </div>\r\n                    <div className={style.phone}>{phone}</div>\r\n                    <div className={style.email}>{email}</div>\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <div>\r\n                Your`s favourite contacts \r\n            </div>\r\n            {favContacts}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Favourite;","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\redux\\contacts-reducer.js",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Header\\Header.jsx",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\Contact.jsx",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Contacts\\CreateContact.jsx",["67"],"import React, { useEffect } from 'react';\r\nimport { reset, Field, reduxForm } from 'redux-form';\r\n\r\n\r\nconst CreateContact = React.memo(props => {\r\n   \r\n    useEffect(()=>{\r\n        let items = JSON.parse(localStorage.getItem('contacts'));\r\n        if(items !== null && items.length !== props.cards.length){\r\n            items.forEach((item, index) => {\r\n                props.createCard(items[index]);\r\n                \r\n            });\r\n        }\r\n    },[]);\r\n\r\n    let onSubmit = (value, dispatch) => {\r\n        let id = `f${(~~(Math.random()*1e8)).toString(16)}`;\r\n        value.id = id;\r\n        if(!value.isFavourite) value.isFavourite = false;\r\n        let fullCard = value;\r\n        localStorage.setItem('contacts', JSON.stringify([...props.cards, fullCard]));\r\n        props.createCard(fullCard);\r\n        dispatch(reset(\"contact\"));\r\n    }\r\n    return (\r\n        <div>\r\n            <ContactForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n});\r\n\r\nlet ContactForm = props => {\r\n    const { handleSubmit } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Field name=\"name\" component=\"input\" type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"phone\">Phone</label>\r\n                <Field name=\"phone\" component=\"input\" type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name=\"email\" component=\"input\" type=\"email\" />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"fav\">Favourite</label>\r\n                <Field name=\"isFavourite\" component=\"input\" type=\"checkbox\"/>\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nContactForm = reduxForm({\r\n    form: 'contact'\r\n})(ContactForm)\r\n\r\n\r\nexport default CreateContact;","E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Edit\\EditContainer.jsx",[],"E:\\FrontEnd\\React\\ReactContactsTest\\mkdir-contacts\\src\\components\\Edit\\Edit.jsx",["68","69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":2,"column":10,"nodeType":"78","messageId":"79","endLine":2,"endColumn":23},{"ruleId":"80","severity":1,"message":"81","line":6,"column":47,"nodeType":"82","messageId":"83","endLine":6,"endColumn":49},{"ruleId":"76","severity":1,"message":"84","line":8,"column":43,"nodeType":"78","messageId":"79","endLine":8,"endColumn":54},{"ruleId":"85","severity":1,"message":"86","line":15,"column":7,"nodeType":"87","endLine":15,"endColumn":9,"suggestions":"88"},{"ruleId":"76","severity":1,"message":"89","line":3,"column":10,"nodeType":"78","messageId":"79","endLine":3,"endColumn":18},{"ruleId":"76","severity":1,"message":"90","line":3,"column":33,"nodeType":"78","messageId":"79","endLine":3,"endColumn":39},{"ruleId":"76","severity":1,"message":"91","line":5,"column":8,"nodeType":"78","messageId":"79","endLine":5,"endColumn":25},{"ruleId":"76","severity":1,"message":"84","line":35,"column":32,"nodeType":"78","messageId":"79","endLine":35,"endColumn":43},"no-native-reassign",["92"],"no-negated-in-lhs",["93"],"no-unused-vars","'isFavouriteAC' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'isFavourite' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["94"],"'Redirect' is defined but never used.","'Switch' is defined but never used.","'ContactsContainer' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"95","fix":"96"},"Update the dependencies array to be: [props]",{"range":"97","text":"98"},[455,457],"[props]"]