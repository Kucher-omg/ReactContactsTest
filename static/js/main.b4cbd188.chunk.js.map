{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Header/Header.jsx","redux/contacts-reducer.js","components/Contacts/CreateContact.jsx","components/Contacts/Contact.jsx","components/Contacts/Contacts.jsx","components/Contacts/ContactsContainer.jsx","components/Favourite/Favourite.jsx","components/Favourite/FavouriteContainer.jsx","components/Edit/Edit.jsx","components/Edit/EditContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js","components/Header/Header.module.css","components/Favourite/Favourite.module.css"],"names":["module","exports","NavLink","require","Header","props","className","style","header","forNavLink","to","navLink","activeClassName","activeNavLink","CREATE_CARD","DELETE_CARD","SET_FAV","EDIT_CARD","ADD_EDIT_ID","initial","cards","editId","editCardAC","editedCard","type","ContactsPage","state","action","card","map","elem","index","id","isFavourite","bool","filter","cardId","CreateContact","React","memo","useEffect","items","JSON","parse","localStorage","getItem","length","forEach","item","createCard","onSubmit","value","dispatch","Math","random","toString","fullCard","setItem","stringify","reset","ContactForm","handleSubmit","htmlFor","Field","name","component","reduxForm","form","Contact","phone","email","contact","onClick","deleteCard","deleteItem","delete","changeFav","checked","Contacts","arrayOfContacts","contactsList","contacts","formCreate","connect","editCard","Favourite","favContacts","EditForm","placeholder","EditWithRouter","withRouter","console","log","history","push","EditComponent","path","render","ContactsContainer","FavouriteContainer","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","formReducer","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b4cbd188.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formCreate\":\"Contacts_formCreate__kJ-pP\",\"contact\":\"Contacts_contact__2bcwr\",\"delete\":\"Contacts_delete__1SdUx\",\"contactsList\":\"Contacts_contactsList__1_okD\"};","import style from './Header.module.css';\r\n\r\nconst { NavLink } = require(\"react-router-dom\");\r\n\r\n\r\nconst Header = (props) => {\r\n    return (\r\n        <div className={style.header}>\r\n\r\n            <div className={style.forNavLink}>\r\n                <NavLink to='/contacts' className={style.navLink} activeClassName={style.activeNavLink}>\r\n                    Contacts+create\r\n                </NavLink>\r\n                <NavLink to='/favcontacts' className={style.navLink} activeClassName={style.activeNavLink}>\r\n                    Favourite contacts\r\n                </NavLink>\r\n            </div>\r\n\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default Header;","\r\nconst CREATE_CARD = 'CREATE-CARD';\r\nconst DELETE_CARD = 'DELETE-CARD';\r\nconst SET_FAV = 'SET-FAV';\r\nconst EDIT_CARD = 'EDIT-CARD';\r\nconst ADD_EDIT_ID = 'ADD-EDIT-ID';\r\n\r\nconst initial = {\r\n    cards: [],\r\n    editId: 0\r\n}\r\n\r\nconst ContactsPage = (state = initial, action) => {\r\n    switch (action.type) {\r\n        case CREATE_CARD: {\r\n            \r\n            return {\r\n                ...state,\r\n                cards: [action.card, ...state.cards]\r\n            }\r\n        }\r\n        \r\n        case SET_FAV: {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map((elem, index) => {\r\n                    if (elem.id === action.id) {\r\n                        elem.isFavourite = action.bool;\r\n                        return elem;\r\n                    }\r\n                    else return elem;\r\n                })\r\n            }\r\n        }\r\n        case EDIT_CARD: {\r\n            return {\r\n                ...state,\r\n                cards: state.cards.map((elem, index) => {\r\n                    if (elem.id === action.editedCard.id) {\r\n                        return action.editedCard\r\n                    }\r\n                    else return elem;\r\n                })\r\n            }\r\n        }\r\n        case ADD_EDIT_ID: {\r\n            return{\r\n                ...state,\r\n                editId: action.id\r\n            }\r\n        }\r\n        case DELETE_CARD:{\r\n            debugger;\r\n            return {\r\n                ...state,\r\n                cards: state.cards.filter(card => card.id !== action.cardId)\r\n            }\r\n        }\r\n        default: {\r\n            return state\r\n        }\r\n    }\r\n}\r\n\r\nexport const createCardAC = (card) => ({ type: CREATE_CARD, card });\r\nexport const deleteCardAC = (cardId) => ({ type: DELETE_CARD, cardId });\r\n\r\nexport const isFavouriteAC = (id, bool) => ({ type: SET_FAV, id, bool });\r\nexport const editCardAC = (editedCard) => ({ type: EDIT_CARD, editedCard });\r\nexport const editIdAC = (id) => ({ type: ADD_EDIT_ID, id });\r\n\r\n\r\nexport default ContactsPage;","import React, { useEffect } from 'react';\r\nimport { reset, Field, reduxForm } from 'redux-form';\r\n\r\n\r\nconst CreateContact = React.memo(props => {\r\n   \r\n    useEffect(()=>{\r\n        let items = JSON.parse(localStorage.getItem('contacts'));\r\n        if(items !== null && items.length !== props.cards.length){\r\n            items.forEach((item, index) => {\r\n                props.createCard(items[index]);\r\n                \r\n            });\r\n        }\r\n    },[]);\r\n\r\n    let onSubmit = (value, dispatch) => {\r\n        let id = `f${(~~(Math.random()*1e8)).toString(16)}`;\r\n        value.id = id;\r\n        if(!value.isFavourite) value.isFavourite = false;\r\n        let fullCard = value;\r\n        localStorage.setItem('contacts', JSON.stringify([...props.cards, fullCard]));\r\n        props.createCard(fullCard);\r\n        dispatch(reset(\"contact\"));\r\n    }\r\n    return (\r\n        <div>\r\n            <ContactForm onSubmit={onSubmit} />\r\n        </div>\r\n    );\r\n});\r\n\r\nlet ContactForm = props => {\r\n    const { handleSubmit } = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Field name=\"name\" component=\"input\" type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"phone\">Phone</label>\r\n                <Field name=\"phone\" component=\"input\" type=\"text\" />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name=\"email\" component=\"input\" type=\"email\" />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"fav\">Favourite</label>\r\n                <Field name=\"isFavourite\" component=\"input\" type=\"checkbox\"/>\r\n            </div>\r\n            <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nContactForm = reduxForm({\r\n    form: 'contact'\r\n})(ContactForm)\r\n\r\n\r\nexport default CreateContact;","import { NavLink } from 'react-router-dom';\r\nimport style from './Contacts.module.css';\r\n\r\n\r\nconst Contact = (props) => {\r\n    //props.card\r\n    let {name, phone, email, id, isFavourite} = props.card;\r\n    let changeFav = (id, bool) => {\r\n        props.isFavourite(id, bool);\r\n        let items = JSON.parse(localStorage.getItem('contacts'));\r\n        localStorage.setItem('contacts', JSON.stringify(items.map(item => {\r\n            if(item.id === id){\r\n                item.isFavourite = bool;\r\n                \r\n            }\r\n             return item\r\n        })));\r\n    }\r\n    let deleteItem = (id) => {\r\n        props.deleteCard(id);\r\n        let items = JSON.parse(localStorage.getItem('contacts'));\r\n        localStorage.setItem('contacts', JSON.stringify(items.filter(item => item.id !== id)));\r\n    }\r\n    let editCard = () => {\r\n        props.editId(props.card);\r\n    }\r\n    return(\r\n        <div key={id} className={style.contact}>\r\n            <div className={style.name}>\r\n                {name}\r\n                <span onClick={() => deleteItem(id)} className={style.delete}>X</span>\r\n            </div>\r\n            <div className={style.phone}>{phone}</div>\r\n            <div className={style.email}>{email}</div>\r\n           <input onClick={() => changeFav(id, !isFavourite)} checked={isFavourite} type=\"checkbox\"/>\r\n           <NavLink to='/edit'>\r\n                <input onClick={() => editCard()} type=\"button\" value='edit card'/>\r\n           </NavLink>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Contact;","import CreateContact from \"./CreateContact\";\r\nimport style from './Contacts.module.css';\r\nimport Contact from \"./Contact\";\r\n\r\nconst Contacts = (props) => {\r\n    // debugger\r\n    let arrayOfContacts = props.cards.map( elem => {\r\n        return <div className={style.contactsList}>\r\n            <Contact editId={props.editId} isFavourite={props.isFavourite} deleteCard={props.deleteCard} card={elem} />\r\n        </div>\r\n    })\r\n    return (\r\n        <div className={style.contacts}>\r\n            <div className={style.formCreate}>\r\n                <CreateContact {...props} />\r\n            </div>\r\n                {arrayOfContacts}\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default Contacts;","import { connect } from \"react-redux\"\r\nimport { editCardAC, createCardAC, isFavouriteAC, deleteCardAC, editIdAC } from \"../../redux/contacts-reducer\";\r\nimport Contacts from \"./Contacts\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        cards: state.contacts.cards\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n    editCard: editCardAC,\r\n    createCard: createCardAC,\r\n    isFavourite: isFavouriteAC,\r\n    deleteCard: deleteCardAC,\r\n    editId: editIdAC\r\n})(Contacts);","import style from './Favourite.module.css';\r\n\r\n\r\nconst Favourite = (props) => {\r\n\r\n    let favContacts = props.cards.map(contact => {\r\n        if (contact.isFavourite === true) {\r\n            let { name, phone, email, id, isFavourite } = contact;\r\n            return (\r\n                <div key={id} className={style.contact}>\r\n                    <div className={style.name}>\r\n                        {name} \r\n                    </div>\r\n                    <div className={style.phone}>{phone}</div>\r\n                    <div className={style.email}>{email}</div>\r\n                </div>\r\n            )\r\n        }\r\n    })\r\n    return (\r\n        <div>\r\n            <div>\r\n                Your`s favourite contacts \r\n            </div>\r\n            {favContacts}\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default Favourite;","import { connect } from 'react-redux';\r\nimport { isFavouriteAC } from '../../redux/contacts-reducer';\r\nimport Favourite from './Favourite';\r\n\r\nconst mapStateToProps = (state) => {\r\n        return {\r\n                cards: state.contacts.cards\r\n        }\r\n}\r\n\r\nexport default connect(mapStateToProps, {\r\n        \r\n})(Favourite);","import style from './Edit.module.css';\r\nimport {Field, reduxForm } from 'redux-form';\r\nimport { Redirect,  withRouter, Switch } from \"react-router\";\r\n\r\nimport ContactsContainer from '../Contacts/ContactsContainer';\r\n\r\nconst Edit = (props) => {\r\n    \r\n    let onSubmit = (value) => {\r\n        if(!value.isFavourite) value.isFavourite = false;\r\n        value.id = props.editId.id;\r\n        console.log(value);\r\n        props.editCard(value);\r\n        //LocalStorage changing\r\n        let items = JSON.parse(localStorage.getItem('contacts'));\r\n        localStorage.setItem('contacts', JSON.stringify(items.map(item => {\r\n            if(item.id === value.id){\r\n                return value\r\n            }\r\n             return item\r\n        })));\r\n        props.history.push('/contacts');\r\n    }\r\n    return (\r\n        <div className={style.contacts}>\r\n            <EditForm onSubmit={onSubmit} {...props}/>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nlet EditForm = props => {\r\n\r\n    const { handleSubmit } = props;\r\n    const {name, phone, email, isFavourite } = props.editId;\r\n    \r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <div>\r\n                <label htmlFor=\"name\">Name</label>\r\n                <Field name=\"name\" component=\"input\" type=\"text\" placeholder={name} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"phone\">Phone</label>\r\n                <Field name=\"phone\" component=\"input\" type=\"text\" placeholder={phone}/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"email\">Email</label>\r\n                <Field name=\"email\" component=\"input\" type=\"email\" placeholder={email} />\r\n            </div>\r\n            <div>\r\n                <label htmlFor=\"fav\">Favourite</label>\r\n                <Field name=\"isFavourite\" component=\"input\" type=\"checkbox\"/>\r\n            </div>\r\n            \r\n                <button type=\"submit\">Submit</button>\r\n        </form>\r\n    );\r\n}\r\n\r\n\r\nEditForm = reduxForm({\r\n    form: 'editContact'\r\n})(EditForm)\r\n\r\n\r\nlet EditWithRouter = withRouter(Edit);\r\n\r\nexport default EditWithRouter;","import { connect } from \"react-redux\";\r\nimport { editCardAC } from \"../../redux/contacts-reducer\";\r\nimport EditComponent from \"./Edit\";\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        editId: state.contacts.editId\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,{\r\n    editCard: editCardAC\r\n\r\n})(EditComponent);\r\n","import './App.css';\nimport { Route, withRouter } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport ContactsContainer from './components/Contacts/ContactsContainer';\nimport FavouriteContainer from './components/Favourite/FavouriteContainer';\nimport Edit from './components/Edit/EditContainer';\n\nconst App = () => {\n    return(\n      <div>\n        <div>\n          <Header />\n        </div>\n        <div>\n          <Route path='/contacts' render={() => <ContactsContainer />}/>          \n          <Route path='/favcontacts' render={() => <FavouriteContainer />}/>\n          <Route path='/edit' render={() => <Edit />} />\n        </div>\n        \n      </div>\n    );\n}\n\nexport default withRouter(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers, createStore } from \"redux\";\r\nimport ContactsPage from \"./contacts-reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\n\r\nconst reducers = combineReducers({\r\n    contacts: ContactsPage,\r\n    form: formReducer\r\n});\r\n\r\nconst store = createStore(reducers);\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/redux-store';\n\nReactDOM.render(\n  <HashRouter>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navLink\":\"Header_navLink__1w83Z\",\"forNavLink\":\"Header_forNavLink__15eEY\",\"activeNavLink\":\"Header_activeNavLink__UaxJt\",\"header\":\"Header_header__2Hqkk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contact\":\"Favourite_contact__1-2rM\"};"],"sourceRoot":""}